Dokumentation:
    âœ… Migrationsanleitung von 4.5 auf 5.0
        - Auf geÃ¤nderte Idents hinweisen
    ğŸŸ¥ Hinweise zum Update von Z2M auf 2.0
    âœ… Neue Features in Changelog aufnehmen
        - Neue Aktionen
        - Keine missing exposes Debugs mehr nÃ¶tig
    âœ… Installationsanleitung Ã¼berarbeiten
    ğŸŸ¥ Anleitung Konfigurator und Bridge fehlen noch
    ğŸŸ¨ Command und CommandExt sind public und somit fÃ¼r Device, Group und Configurator verfÃ¼gbar.
        Doku hierzu ist aber nur in der Readme vom Configurator enthalten und dort noch falsch erklÃ¤rt (Topics und Signatur)
    ğŸŸ¨ Konfigurator muss beim Ã¶ffnen eine Bitte warten Meldung ausgeben, bis die Suche abgeschlossen ist.
    ğŸŸ¨ Bridge Instanz sollte beim Klicken auf dem Button der Erweiterung-Installation eine RÃ¼ckmeldung geben.
    
Features 5.x:
    ğŸŸ¨ Composite Variablen ergÃ¤nzen.
    ğŸŸ¨ OTA Update Variablen zerlegen (optional?).
    ğŸŸ¨ OTA Updates Ã¼ber Bridge Instanz prÃ¼fen, darstellen, anbieten?
    ğŸŸ¨ Oder eigene OTA Instanz?
    ğŸŸ¨ Discovery Modul erstellen
        - Zuerst von allen vorhandenen MQTT Server Instanzen die Retain Topics laden und nach dem Keywords zigbee2mqtt und z2m durchsuchen.
          - PrÃ¼fen ob das Retain Topic auf *Suchmuster*/bridge/state endet.
          - Gefundene Bridges an MQTT Server merken und
          - Konfigurator mit dem *Suchmuster* als basetopic anbieten, bzw. vorher mit vorhandenen abgleichen. Die Kette anpassen auf den dazugehÃ¶rigen MQTT Server.
        - Alle MQTT Client Instanzen auslesen und Protocol+IP+Port kombinieren.
          - Mit einer PHP-MQTT Library (da Symcon das aktuell nicht kann) sich mit jedem Server verbinden und auf +/bridge/state subscriben und Antwort prÃ¼fen.
          - Gefundene Bridges an MQT Client (anhand des Protocol+IP+Port) merken und 
          - Konfigurator mit dem gefundenen basetopic anbieten, bzw. vorher mit vorhandenen abgleichen. Die Kette anpassen auf den dazugehÃ¶rigen MQTT Client.
    ğŸŸ¨ GerÃ¤te und Gruppen Instanzen erhalten einen Support ExpansionPanel:
        - Fehlende Ãœbersetzungen anzeigen (Buffer).
        - Mit der MÃ¶glichkeit die JSON zu lÃ¶schen oder anzeigen.
        - Download eines ZIP Archives mit dem letzten Payload, der expose JSON und der vorhandenen Variablen inkl. Profile der Instanz.
    ğŸŸ¨ Testfunktionen ergÃ¤nzen das expose JSON und Payloads mit phpunit getestet werden kÃ¶nnen.
    ğŸŸ© Diverse Code Optimierungen laut @Burki24
    